<Window 
        x:Class="MainWindow"
        x:Name="obj_Window_MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DDFStudio"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:Kernel="clr-namespace:DDFStudio.Kernel" 
        xmlns:Data="clr-namespace:DDFStudio.Kernel.Data" 
        mc:Ignorable="d"
        Title="DDF Studio - (unnamed.xml)" Height="600" Width="800" WindowStartupLocation="CenterScreen" Icon="Resources/MainIcon.ico" MinHeight="500" MinWidth="600">
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommandHandler"/>
        <CommandBinding Command="ApplicationCommands.Save" Executed="SaveCommandHandler" CanExecute="SaveCommandCanExecute"/>
        <CommandBinding Command="ApplicationCommands.SaveAs" Executed="SaveAsCommandHandler" CanExecute="SaveAsCommandCanExecute"/>
        <CommandBinding Command="ApplicationCommands.New" Executed="NewCommandHandler" CanExecute="NewCommandCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Open" Executed="OpenCommandHandler" CanExecute="OpenCommandCanExecute"/>
        <CommandBinding Command="local:Commands.SaveAllCommand" Executed="SaveAllCommandHandler" CanExecute="SaveAllCommandCanExecute"/>
        <CommandBinding Command="local:Commands.CloseProfileCommand" Executed="CloseProfileCommandHandler" CanExecute="CloseProfileCommandCanExecute"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="Q" Command="ApplicationCommands.Close"/>
    </Window.InputBindings>
    <Window.Resources>

        <local:ScrollbarOnFarRightConverter x:Key="scrollbarOnFarRightConverter"/>
        <local:ScrollbarOnFarLeftConverter x:Key="scrollbarOnFarLeftConverter"/>

        <!-- The colors that will be used when assembling the brushes for the LineButtons-->
        <Color x:Key="LineButtonBackgroundColor_Bright">LightGoldenrodYellow</Color>
        <Color x:Key="LineButtonBackgroundColor_Dark">#FAEEB1</Color>
        <Color x:Key="LineButtonBackgroundColorDisabled_Bright">#EEE</Color>
        <Color x:Key="LineButtonBackgroundColorDisabled_Dark">#999</Color>

        <!-- Color of the border around the scrollbar-thumb -->
        <SolidColorBrush x:Key="LineButtonBorderBrush" Color="#FF8693BD"/>

        <!-- The color for the scrollbar's line-buttons when the mouse hovers over them -->
        <LinearGradientBrush x:Key="LineButtonHoverBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FFFFD5A0" Offset="0.3"/>
            <GradientStop Color="#FFFFA335" Offset="0.51"/>
            <GradientStop Color="#FFFFC14A" Offset="0.986"/>
        </LinearGradientBrush>

        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="LineButtonBackgroundBrush">
            <GradientStop Offset="0.3" Color="{StaticResource LineButtonBackgroundColor_Bright}"/>
            <GradientStop Offset="0.4" Color="{StaticResource LineButtonBackgroundColor_Dark}"/>
            <GradientStop Offset="1" Color="{StaticResource LineButtonBackgroundColor_Bright}"/>
        </LinearGradientBrush>


        <!-- The color for the scrollbar's line-buttons when they're clicked/pressed -->
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="LineButtonPressedBrush">
            <GradientStop Offset="0" Color="{StaticResource LineButtonBackgroundColor_Bright}"/>
            <GradientStop Offset="0.6" Color="{StaticResource LineButtonBackgroundColor_Dark}"/>
            <GradientStop Offset="0.7" Color="{StaticResource LineButtonBackgroundColor_Bright}"/>
        </LinearGradientBrush>

        <!-- The color to be used when drawing the arrows on the scrollbar's line-buttons -->
        <SolidColorBrush x:Key="LineButtonBrush" Color="#FF14273D"/>

        <!-- The color for the scrollbar's line-buttons when they're disabled -->
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="LineButtonDisabledBrush">
            <GradientStop Offset="0" Color="{StaticResource LineButtonBackgroundColorDisabled_Bright}"/>
            <GradientStop Offset="1" Color="{StaticResource LineButtonBackgroundColorDisabled_Dark}"/>
        </LinearGradientBrush>

        <!--
         The Geometries below will be used to render the ScrollViewer's LineLeft-,
         LineRight- and TabMenu-buttons.
      -->
        <Geometry x:Key="ArrowLeft">M0,5 L10,10 10,0Z</Geometry>
        <Geometry x:Key="ArrowRight">M0,0 L10,5 L0,10Z</Geometry>

        <!-- 
         Definitions for the Path-Geometries that are being used to render
         the ScrollViewer's LineButtons.
      -->
        <Path x:Key="ArrowLeftPath"
            Margin="4,3"
            Data="{StaticResource ArrowLeft}"
            Stroke="{StaticResource LineButtonBrush}" 
            Fill="{StaticResource LineButtonBrush}"
            Stretch="Fill"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"/>
        <Path x:Key="ArrowRightPath"
            Margin="4,3"
            Data="{StaticResource ArrowRight}"
            Stroke="{StaticResource LineButtonBrush}" 
            Fill="{StaticResource LineButtonBrush}"
            Stretch="Fill"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"/>

        <!-- 
         This determines how wide/high the LineButtons will be rendered.
      -->
        <sys:Double x:Key="ButtonWidthAndHeight">16</sys:Double>

        <!-- Styles for the LineButtons -->
        <Style x:Key="LineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Height" Value="{StaticResource ButtonWidthAndHeight}"/>
            <Setter Property="Width" Value="{StaticResource ButtonWidthAndHeight}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="ButtonBorder" Margin="1"
                          BorderBrush="{StaticResource LineButtonBorderBrush}" 
                          Background="{StaticResource LineButtonBackgroundBrush}" 
                          CornerRadius="1" 
                          BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="ButtonBorder" Property="Background" 
                                Value="{StaticResource LineButtonHoverBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="ButtonBorder" Property="Background" 
                                Value="{StaticResource LineButtonPressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Background" 
                                Value="{StaticResource LineButtonDisabledBrush}" />
                                <Setter TargetName="ButtonBorder" Property="Opacity" 
                                Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Unselected" EndPoint="1,0.25" StartPoint="0,0.5" SpreadMethod="Pad">
            <GradientStop Color="#ff819af9" Offset="0"/>
            <GradientStop Color="#ff0f3ff3" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TabItem_HoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0" SpreadMethod="Pad">
            <GradientStop Color="#ffd7dffd" Offset="0"/>
            <GradientStop Color="#ff6584f7" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Selected" EndPoint="1,0.25" StartPoint="0,0.5" SpreadMethod="Pad">
            <GradientStop Color="#ffffeda8" Offset="0"/>
            <GradientStop Color="#ffffd531" Offset="1"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="TabItem_BorderBrush_Selected" Color="#ffffd531"/>
        <SolidColorBrush x:Key="TabItem_Border_Unselected" Color="#ff0f3ff3"/>
        <SolidColorBrush x:Key="TabItem_TextBrush_Unselected" Color="#ffBBBBBB"/>
        <SolidColorBrush x:Key="TabItem_TextBrush_Selected" Color="#ff000000"/>
        <SolidColorBrush x:Key="TabItem_TextBrush_Hover" Color="#ff555555"/>
        <SolidColorBrush x:Key="TabItem_HoverBorderBrush" Color="#ff6584f7"/>

        <Thickness x:Key="TabPanelScrollPanel_Margin">5,0,0,2</Thickness>

        <Style x:Key="EnableDisableImageStyle" TargetType="{x:Type Image}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.45"/>
                    <Setter Property="BitmapEffect">
                        <Setter.Value>
                            <BlurBitmapEffect Radius="1.75" KernelType="Gaussian"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Border Height="35" Name="TabPanelBorder">
                                <ScrollViewer SnapsToDevicePixels="True"
                                                HorizontalScrollBarVisibility="Hidden"
                                                VerticalScrollBarVisibility="Disabled"
                                               Name="svTP" Grid.Row="0">

                                    <ScrollViewer.Style>
                                        <Style TargetType="{x:Type ScrollViewer}">
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid SnapsToDevicePixels="True"
                                                Grid.Row="0" Grid.Column="0">
                                                            <Grid.ColumnDefinitions>
                                                                <!--
                              The TabItems (resp. the TabPanel)
                              will appear here
                           -->
                                                                <ColumnDefinition Width="*"/>
                                                                <!--
                              The following two columns will host
                              the Scrollbuttons
                           -->
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ScrollContentPresenter
                           x:Name="PART_ScrollContentPresenter"
                           VirtualizingStackPanel.IsVirtualizing="False"
                           SnapsToDevicePixels="True"
                           Grid.Column="0"
                           Content="{TemplateBinding ScrollViewer.Content}"/>
                                                            <Grid x:Name="gScrollButtons"
                              HorizontalAlignment="Right"
                              Grid.Column="1">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>
                                                                <StackPanel Grid.Row="1"
                                 Orientation="Horizontal"
                                 Margin="{StaticResource TabPanelScrollPanel_Margin}">
                                                                    <!--
                                 The two RepeatButtons below will actually provide
                                 the scroll-functionality for the TabItems.
                                 Here, I'm utilizing the Page[Left/Right]Command;
                                 This could as well be using the
                                 Page[Left/Right]Command instead.
                              -->
                                                                    <RepeatButton
                                 Style="{StaticResource LineButtonStyle}"
                                 Command="ScrollBar.PageLeftCommand"
                                 Content="{StaticResource ArrowLeftPath}"
                                 IsEnabled="{Binding ElementName=svTP,
                                    Path=HorizontalOffset,
                                    Converter={StaticResource  scrollbarOnFarLeftConverter}}"/>
                                                                    <RepeatButton
                                 Style="{StaticResource LineButtonStyle}"
                                 Command="ScrollBar.PageRightCommand"
                                 Content="{StaticResource ArrowRightPath}">
                                                                        <RepeatButton.IsEnabled>
                                                                            <MultiBinding Converter="{StaticResource scrollbarOnFarRightConverter}">
                                                                                <Binding ElementName="svTP"
                                          Path="HorizontalOffset"/>
                                                                                <Binding ElementName="svTP"
                                          Path="ViewportWidth"/>
                                                                                <Binding ElementName="svTP"
                                          Path="ExtentWidth"/>
                                                                            </MultiBinding>
                                                                        </RepeatButton.IsEnabled>
                                                                    </RepeatButton>
                                                                </StackPanel>
                                                            </Grid>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <DataTrigger Value="false">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource scrollbarOnFarRightConverter}">
                                                                        <Binding ElementName="svTP"
                                    Path="HorizontalOffset"/>
                                                                        <Binding ElementName="svTP"
                                    Path="ViewportWidth"/>
                                                                        <Binding ElementName="svTP"
                                    Path="ExtentWidth"/>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ScrollViewer.Style>

                                    <!-- This is the area in which TabItems (the strips) will be drawn. -->
                                    <StackPanel IsItemsHost="True"
                                                Name="TabPanel"
                                                Orientation="Horizontal"
                                                KeyboardNavigation.TabIndex="1"/>

                                </ScrollViewer>

                            </Border>

                            <Border BorderThickness="1,0,1,1"
                     Grid.Row="1">
                                <!--
                     This is where the Content of the selected TabPage
                     will be rendered.
                -->
                                <ContentPresenter ContentSource="SelectedContent" Margin="0"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid Height="35" VerticalAlignment="Bottom">
                            <Border Name="Border"
                                    BorderThickness="1,1,1,0"
                                    CornerRadius="12,3,0,0"
                                    Background="{StaticResource TabItem_BackgroundBrush_Unselected}" 
                                    BorderBrush="{StaticResource TabItem_BorderBrush_Selected}" RenderTransformOrigin="0.5,0.5">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="7,2,12,2"
                                                  RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- The appearance of a TabItem when it's inactive/unselected -->
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="Panel.ZIndex" Value="90" />
                                <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource TabItem_Border_Unselected}" />
                                <Setter Property="Foreground"
                                Value="{StaticResource TabItem_TextBrush_Unselected}" />
                                <!-- Except for the selected TabItem, tabs are to appear smaller in height. -->
                                <Setter TargetName="Border" Property="Margin"
                                Value="0,5,-10,0"/>
                            </Trigger>

                            <!--
                        The appearance of a TabItem when it's disabled
                        (in addition to Selected=False)
                     -->
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Panel.ZIndex" Value="80" />
                                <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource TabItem_DisabledBorderBrush}" />
                                <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource TabItem_BackgroundBrush_Disabled}" />
                                <Setter Property="Foreground"
                                Value="{StaticResource TabItem_TextBrush_Disabled}" />
                            </Trigger>-->

                            <!-- The appearance of a TabItem when the mouse hovers over it -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter Property="Foreground" Value="{StaticResource TabItem_TextBrush_Hover}" />
                                <Setter Property="BorderBrush"
                                TargetName="Border"
                                Value="{StaticResource TabItem_HoverBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                                <Setter Property="Background" TargetName="Border"
                                Value="{StaticResource TabItem_HoverBackgroundBrush}"/>
                                <!--
                           To further increase the hover-effect, extend the TabItem's height a little
                           more compared to unselected TabItems.
                        -->
                                <Setter TargetName="Border" Property="Margin"
                                Value="0,2,0,0"/>
                            </MultiTrigger>

                            <!-- The appearance of a TabItem when it's active/selected -->
                            <Trigger Property="IsSelected" Value="True">
                                <!-- We want the selected TabItem to always be on top. -->
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource TabItem_BorderBrush_Selected}" />
                                <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource TabItem_BackgroundBrush_Selected}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Foreground"
                                Value="{StaticResource TabItem_TextBrush_Selected}"/>
                                <Setter TargetName="Border" Property="Margin"
                                Value="0,0,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Resources>
    <Grid x:Name="grdMainLayout" MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60*"/>
            <ColumnDefinition Width="40*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition MinHeight="200"/>
            <RowDefinition Height="Auto" MinHeight="32"/>
        </Grid.RowDefinitions>
        <StatusBar x:Name="objStatusBar"   Grid.Row="5" Grid.ColumnSpan="2" >
            <StatusBarItem>
                <Label x:Name="obj_Label_StatusText" Content="Dies ist der Statustext."/>
            </StatusBarItem>
        </StatusBar>
        <Menu x:Name="objMainMenu" Grid.ColumnSpan="2">
            <MenuItem x:Name="obj_MenuItem_File" Header="_File" InputGestureText="Alt + F">
                <MenuItem x:Name="obj_MenuItem_File_NewDDF" Command="ApplicationCommands.New" Header="_New Profile">
                    <MenuItem.Icon>
                        <Image Source="Resources/Icon_NewDocument.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="obj_MenuItem_File_LoadDDF" Header="_Load Profile" Command="ApplicationCommands.Open">
                    <MenuItem.Icon>
                        <Image Source="Resources/Icon_OpenDocument.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="obj_MenuItem_File_SaveDDF" Header="_Save Profile" Command="ApplicationCommands.Save">
                    <MenuItem.Icon>
                        <Image Source="Resources/Icon_Save.ico"  Style="{StaticResource EnableDisableImageStyle}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="obj_MenuItem_File_SaveDDFAs" Header="Save _Profile as..." Command="ApplicationCommands.SaveAs">
                    <MenuItem.Icon>
                        <Image Source="Resources/Icon_SaveAs.ico"  Style="{StaticResource EnableDisableImageStyle}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="obj_MenuItem_File_SaveAll" Header="Save all" Command="local:Commands.SaveAllCommand">
                    <MenuItem.Icon>
                        <Image Source="Resources/Icon_SaveAll.ico"  Style="{StaticResource EnableDisableImageStyle}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="obj_MenuItem_File_Close" Header="Close" Command="local:Commands.CloseProfileCommand">
                    <MenuItem.Icon>
                        <Image Source="Resources/Icon_CloseDocument.ico"  Style="{StaticResource EnableDisableImageStyle}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="obj_MenuItem_File_RecentDDFs" Header="_Recent Profiles"/>
                <Separator/>
                <MenuItem x:Name="obj_MenuItem_File_Exit" Header="_Quit" Command="ApplicationCommands.Close">
                    <MenuItem.Icon>
                        <Image Source="Resources/Icon_Quit.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem x:Name="obj_MenuItem_Tools" Header="_Tools">
                <MenuItem x:Name="obj_MenuItem_Tools_File" Header="_File Tools" IsCheckable="True"/>
            </MenuItem>
        </Menu>
        <TabControl x:Name="obj_TabControl_EditorTabs" Grid.Row="2" Grid.ColumnSpan="2" Margin="10,5,10,0" >
            <TabControl.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Save" Command="ApplicationCommands.Save">
                        <MenuItem.Icon>
                            <Image Source="Resources/Icon_Save.ico"  Style="{StaticResource EnableDisableImageStyle}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Save as..."  Command="ApplicationCommands.SaveAs">
                        <MenuItem.Icon>
                            <Image Source="Resources/Icon_SaveAs.ico"  Style="{StaticResource EnableDisableImageStyle}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Save all" Command="local:Commands.SaveAllCommand">
                        <MenuItem.Icon>
                            <Image Source="Resources/Icon_SaveAll.ico"  Style="{StaticResource EnableDisableImageStyle}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Close" Command="local:Commands.CloseProfileCommand">
                        <MenuItem.Icon>
                            <Image Source="Resources/Icon_CloseDocument.ico"  Style="{StaticResource EnableDisableImageStyle}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </TabControl.ContextMenu>
        </TabControl>
        <ToolBarTray x:Name="obj_ToolBarTray_UpperTray" Grid.Row="1" Grid.ColumnSpan="2" >
            <ToolBar x:Name="obj_ToolBar_File">
                <Button x:Name="obj_Button_New" ToolTip="Create new fixture profile" Command="ApplicationCommands.New" VerticalAlignment="Top">
                    <StackPanel>
                        <Image Source="Resources/Icon_NewDocument.ico"/>
                        <TextBlock HorizontalAlignment="Center">
                            New
                        </TextBlock>
                    </StackPanel>
                </Button>
                <Separator/>
                <Button x:Name="obj_Button_Load" ToolTip="Load fixture profile" Command="ApplicationCommands.Open">
                    <StackPanel>
                        <Image Source="Resources/Icon_OpenDocument.ico"/>
                        <TextBlock HorizontalAlignment="Center">
                            Load
                        </TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="obj_Button_Save" ToolTip="Save fixture profile" Command="ApplicationCommands.Save">
                    <StackPanel>
                        <Image Source="Resources/Icon_Save.ico" Width="32" Style="{StaticResource EnableDisableImageStyle}"/>
                        <TextBlock HorizontalAlignment="Center">
                            Save
                        </TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="obj_Button_SaveAs" ToolTip="Save fixture profile as..." Command="ApplicationCommands.SaveAs">
                    <StackPanel>
                        <Image Source="Resources/Icon_SaveAs.ico" Width="32"  Style="{StaticResource EnableDisableImageStyle}"/>
                        <TextBlock HorizontalAlignment="Center">
                            Save as...
                        </TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="obj_Button_SaveAll" ToolTip="Save all modified profiles" Command="local:Commands.SaveAllCommand">
                    <StackPanel>
                        <Image Source="Resources/Icon_SaveAll.ico" Width="32" Style="{StaticResource EnableDisableImageStyle}"/>
                        <TextBlock HorizontalAlignment="Center">
                            Save all
                        </TextBlock>
                    </StackPanel>
                </Button>
                <Separator/>
                <Button x:Name="obj_Button_Close" ToolTip="Close current profile" Command="local:Commands.CloseProfileCommand">
                    <StackPanel>
                        <Image Source="Resources/Icon_CloseDocument.ico" Width="32"  Style="{StaticResource EnableDisableImageStyle}"/>
                        <TextBlock HorizontalAlignment="Center">
                            Close
                        </TextBlock>
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <Grid x:Name="obj_Grid_FixtureHeaderLayout" Grid.Row="3" Margin="0" Grid.ColumnSpan="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Canvas Width="128px" Height="128px" Margin="10,10,5,5" VerticalAlignment="Top">
                <Canvas.Background>
                    <ImageBrush ImageSource="Resources/fixture_background.png"/>
                </Canvas.Background>
                <Image x:Name="obj_Image_Fixture" Width="128px" Height="128px">
                    <Image.OpacityMask>
                        <ImageBrush ImageSource="Resources/fixture_background.png"/>
                    </Image.OpacityMask>
                </Image>
            </Canvas>
            <DataGrid x:Name="obj_DataGrid_FixtureHeader" Grid.Column="1" Margin="5,10,10,5" CanUserAddRows="False" CanUserResizeRows="False" CanUserReorderColumns="False" HeadersVisibility="None" ItemsSource="{Binding Information, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" AlternationCount="1" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Key}" ClipboardContentBinding="{x:Null}" IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding Value, BindsDirectlyToSource=True, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" ClipboardContentBinding="{x:Null}" IsReadOnly="False" MinWidth="150" Width="*"/>
                </DataGrid.Columns>
                <DataGrid.DataContext>
                    <Data:FixtureProfile/>
                </DataGrid.DataContext>
            </DataGrid>
        </Grid>
        <Grid x:Name="obj_Grid_DataLayout" Grid.Row="4" Margin="0" Grid.ColumnSpan="1"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftColumn" Width="150" MinWidth="150" MaxWidth="{Binding ActualWidth, ElementName=RightColumn}"/>
                <ColumnDefinition x:Name="SpliterColumn" Width="5px"/>
                <ColumnDefinition x:Name="RightColumn" MinWidth="150"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5px" Margin="0,10" ResizeBehavior="PreviousAndNext"/>
            <DataGrid x:Name="obj_DataGrid_ParameterProperties" Grid.Column="2" Margin="0,5,10,10" MinWidth="100" />
            <ListView x:Name="obj_ListView_ParameterList" Margin="10,5,2,10" >
                <ListView.View>
                    <GridView>
                        <GridViewColumn/>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
        <Grid x:Name="obj_Grid_XMLPreviewLayout" Grid.Column="1" Grid.Row="3" Grid.RowSpan="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label x:Name="obj_Label_XMLPreview" Content="XML Preview" FontWeight="Bold" />
            <WindowsFormsHost x:Name="obj_WinFormHost" Grid.Row="1" Margin="0,0,10,10" />
        </Grid>
    </Grid>

</Window>

    